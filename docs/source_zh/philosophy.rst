.. SPDX-License-Identifier:    CC-BY-SA-3.0


.. _philosophy:

=====================================
Fedora 发布工程理念
=====================================

作为 Fedora 的正式组成部分意味着它是由 Fedora 发行工程 (releng) 组合和支持的。Releng 根据通过我们的
制造火车并满足所有相关政策的项目授予此状态。拥有此状态后，该项是开放的、集成的、可重现的、可审计的、可定义
的和可交付的（没有特定的顺序）。本文档为每个术语提供了定义，解释其重要性以及如何保证它们。Fedora 的所有部
分应始终努力满足成为官方的所有部分。

打开
====

可以毫不夸张地说，Fedora 是建立在 `四个F`_ 的基础之上的。在 releng 中，我们也不例外，我们要求所有内容都是
开放的，即开源的，在公开的条件下开发，可供所有人查看、使用和贡献。所有的下游方应该能够使用我们的工具制作自
己的 Fedora 衍生品，可以通过重新构建一切，也可以通过添加自己的标记和软件包以及重新组合来实现。任何人都应
该可以随时了解 Fedora 是如何组装的，并组装自己的 Fedora 版本。

集成
==========

Fedora 是一个庞大的项目，拥有大量不断增长的可交付成果。这意味着当我们添加新的可交付成果时，我们需要将它们的
组合紧密地集成到流程中。我们发布的是整个 Fedora 单元，因此我们需要将其作为一个整体。我们使用的任何新工具都
需要与现有工具的工作方式保持一致。工具必须确保输出具有可重现性、可审计性、可定义性，以便可以交付。

可重现
============

可重现组件是指我们可以在不到一天的时间内从头开始重新构建它们。这意味着我们可以查找所有的源代码，并知道从源代
码控制中使用哪些修订版本。我们知道用于将源代码转换为产品内容（二进制文件）的构建环境中使用了哪些工具。我们还
知道如何重现相同的构建环境，以确保工具表现出我们预期的行为。这个方面是 releng 标准化构建工具的原因。

可重现组件非常重要，因为它们使得维护变得更加容易。安全团队利用了这个产品的方面。不知道如何重新构建产品中的子
系统以应用安全修复程序或错误修复程序会使他们的工作变得更加困难。为用户提供一个我们无法（或只是不确定如何）再
次构建的产品，将是一个重大风险。不知道源代码的来源也是一个重大风险，这就是为什么我们的许多构建环境都被配置为
防止工具从互联网动态下载内容的原因。

Koji 和 fedpkg 的结合使得 releng 可以重新构建组件。fedpkg 管理我们 dist-git 系统中的源代码，而 Koji 
存档有关构建环境、使用的工具、日志和二进制文件本身的详细信息。产品的可重现性是我们要求所有产品在 Koji 中构建
的主要原因，如果它们希望成为 Fedora 的正式支持部分。

可审计
=========

Fedora 和 Red Hat 也期望具有可审计的输出，这意味着 releng 知道谁在何时何地（以及如何，但这是可重现性）构
建了什么。能够权威地说某些东西是由签署了 FPCA 的人在 Fedora 中构建的，对于几个原因都很重要。一个很重要的原
因是它促进和培养社区内的问责制。它促进所有权。另一个原因是更防御性的：在安全漏洞的情况下，我们已经准备好了大量
的证据和数据来帮助我们确定哪些内容（如果有的话）被攻击者获得。如果某个内核 RPM 突然出现，而我们没有记录它的构
建和/或交付记录，那么很快就应该引起很多警报！

Red Hat 的信息安全团队和 Fedora 安全团队非常关注此方面。我们永远不应该处于无法明确回答为什么某些内容可供用
户使用的情况下。这个方面也是 Fedora 成为 RHEL 时所进行的验证的关键部分。所有 Fedora 的下游消费者都期望他们
可以验证从 Fedora 消费的代码和二进制文件。

Releng 在两个系统中跟踪这些数据，其中我们拥有一个系统：Koji 和 Bodhi。Koji 使用与 FAS 相关的 ssl 证书，
而 bodhi 使用 FAS 进行身份验证，以在用户和内容之间提供强大的关系。当然，Koji 构建内容，Bodhi 跟踪与内容相
关的 bug、文档和增强功能，并实际进行交付。Bodhi 记录了何时何地和谁推送了什么东西。


可定义
=========

能够定义和预测内容也是必要的。准确知道发布中包含了什么非常重要。它有助于防止不必要地增加支持负担的内容。 
Fedora 组件的这个方面有助于支持其他方面，如可重复性。没有必要再次复制我们不必发送的软件，不是吗？确保产品内容
简洁明了可能听起来很明显，但在散乱的 RPM 依赖、Maven 构件和 Ruby gem 的世界中，在多月或多年的开发周期中包
含内容实际上是相当容易的。

此外，一个可定义的组件经过多个团队审核和理解其进行的更改。它们不是在零散的方式下进行的，也不是没
有 FESCo、QA、releng 和参与项目级别贡献的产品工作小组的同意。这降低了用户的更改风险，这是我们的用户和下游
所喜欢的听到的消息。

许多系统有助于使组件可定义。Releng 使用 Bugzilla、trac、阻断问题和 bodhi 来跟踪添加和更改。


可交付
===========

Fedora 的官方部分有资格在 `Fedora 下载`_ 的 ``/pub/fedora/`` 或 ``/pub/alt/releases`` 中交付，并获得在 `mirrormanager`_ 中的 `镜像列表`_ 。
这些分发平台由 Fedora 基础设施和 releng 维护。这不是产品内容本身或构建方式的特性，而是通过 releng 的流程向用户交付的方式。这些平台由志愿者镜像网络进行
地理上的复制。它们提供可靠和持久的服务，确保用户始终可以获取 Fedora 的更新，即使我们位于 phx2 的数据中心遇到灾难也是如此。

用户支持（用户邮件列表和 `#fedora` ）和 Fedora 安全团队依赖这些服务。关键安全修复程序和更新对于用户始终可用非常重要。


.. _四个F: https://fedoraproject.org/wiki/Foundations
.. _Fedora 下载: https://dl.fedoraproject.org/pub/
.. _镜像列表: https://admin.fedoraproject.org/mirrormanager
.. _mirrormanager: https://github.com/fedora-infra/mirrormanager2
