#!/bin/bash


# Copyright (C) 2015 Red Hat, Inc.
# SPDX-License-Identifier:      GPL-2.0+

VERSION=$1
COMPOSE=$2
DATE=$3
BRANCH=$(echo $VERSION|sed -e 's|_.*||g')
DESTDIR=/srv/pungi/$VERSION-$DATE/
FINALDEST=/mnt/fedora_koji/compose/$VERSION-$DATE/
KICKSTARTS=/srv/pungi/spin-kickstarts/
ATOMIC=/srv/pungi/fedora-atomic/
ATOMICDEST=/srv/pungi/atomic/

SHORTCOMPOSE=$(echo $COMPOSE|sed -e 's|_RC||g')
SHORTVERSION=$VERSION
[ -z "$COMPOSE" ] && {
        SHORTVERSION=$(echo $VERSION|sed -e 's|_T.*||')
        SHORTCOMPOSE=$(echo $VERSION|sed -e 's|.*_||g')
}

FULLPATH=$(pwd)
pushd $KICKSTARTS
git reset --hard
git checkout f$VERSION 
git pull --rebase

$FULLPATH/build-cloud-images "$VERSION" "$DATE" "$BRANCH" "$COMPOSE"
popd


while true
do
  if [ $(koji list-tasks --mine|grep OPEN|grep -e image -e livecd -e appliance|wc -l) -ne 0 ]
  then
    echo "image, appliance or livecd tasks running, waiting 2 minutes"
    sleep 120
  else
    break
  fi
done


## XXX inject lorax code here for atomic iso creation
## NOTE: <dgilmore> masta: ./make-updates 21 updates 20150309
##

# fixup the kickstart files so lorax is happy
sed -i -e 's|repo --name=fedora .*$|repo --name=fedora --baseurl=http://kojipkgs.fedoraproject.org/mash/branched/$basearch/os/ \nrepo --name=bleed --baseurl=http://kojipkgs.fedoraproject.org/mash/bleed/$basearch|g' fedora-install-*.ks
sed -i -e 's|repo --name=fedora-source .*$|repo --name=fedora-source  --baseurl=http://kojipkgs.fedoraproject.org/mash/branched/source/SRPMS/\nrepo --name=bleed-source --baseurl=http://kojipkgs.fedoraproject.org/mash/bleed/SRPMS|g' fedora-install-*.ks

pushd

# use the latest updated kickstarts
pushd $ATOMIC
git reset --hard
git pull --rebase

# Generate the bleed repo
cat <<EOF >fedora-bleed.repo
[fedora-bleed]
name=fedora-bleed
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-${VERSION}-\$basearch
enabled=1
baseurl=http://kojipkgs.fedoraproject.org/mash/bleed/\$basearch/
EOF

# Replace mirrorlist (if present) with baseurl
sed -i -e "s|mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=fedora-${VERSION}&arch=\$basearch|baseurl=http://kojipkgs.fedoraproject.org/mash/branched/\$basearch/os/|g" fedora*repo

# Append the fedora-=bleed repo
sed -i -e "s|\[\"\(fedora-${VERSION}\)\"\]|\[\"\1\", \"fedora-bleed\"\]|g" *json

mock -r fedora-branched-compose-x86_64 --init || exit 1
mock -r fedora-branched-compose-x86_64 --install rpm-ostree lorax || exit 1
mock -r fedora-branched-compose-x86_64  --shell "if [ ! -d "$ATOMICDEST" ]; then ostree init --repo=${ATOMICDEST} --mode=archive-z2;fi"
mock -r fedora-branched-compose-x86_64 --shell "rpm-ostree compose tree --repo=${ATOMICDEST} ${ATOMIC}/fedora-atomic-docker-host.json" || exit 1
mock -r fedora-branched-compose-x86_64 --shell "mkdir -p ${DESTDIR}/${VERSION}/Cloud_Atomic/x86_64/iso"
mock -r fedora-branched-compose-x86_64 --shell "lorax --nomacboot -p Fedora -v ${SHORTVERSION} -r ${SHORTCOMPOSE} \
                                                 -s http://kojipkgs.fedoraproject.org/mash/branched/x86_64/os/ \
                                                 -s http://kojipkgs.fedoraproject.org/mash/bleed/x86_64/ \
                                                 -i fedora-productimg-atomic \
                                                 -t Cloud_Atomic \
                                                 --tmp /tmp/ \
                                                 --logfile=${DESTDIR}/logs/atomic \
                                                 --add-template /srv/pungi/spin-kickstarts/atomic-installer/lorax-configure-repo.tmpl \
                                                 --add-template-var=ostree_osname=fedora-atomic \
                                                 --add-arch-template-var=ostree_repo=http://compose-x86-01.phx2.fedoraproject.org/compose/atomic/ \
                                                 --add-template-var=ostree_ref=fedora-atomic/f${VERSION}/x86_64/docker-host \
                                                 --add-arch-template /srv/pungi/spin-kickstarts/atomic-installer/lorax-embed-repo.tmpl \
                                                 --add-arch-template-var=ostree_osname=fedora-atomic \
                                                 --add-arch-template-var=ostree_ref=fedora-atomic/f${VERSION}/x86_64/docker-host \
                                                 ${DESTDIR}/${VERSION}/Cloud_Atomic/x86_64/os/ " || exit 1
mock -r fedora-branched-compose-x86_64 --shell "cp -l ${DESTDIR}/${VERSION}/Cloud_Atomic/x86_64/os/images/boot.iso ${DESTDIR}/${VERSION}/Cloud_Atomic/x86_64/iso/Fedora-Cloud_Atomic-x86_64-${VERSION}.iso" || exit 1
mock -r fedora-branched-compose-x86_64 --shell "pushd ${DESTDIR}/${VERSION}/Cloud_Atomic/x86_64/iso/ ;sha256sum -b --tag *iso >Fedora-Cloud_Atomic-${VERSION}-x86_64-CHECKSUM; popd" || exit 1

popd
## XXX End of lorax injection

sg releng "mkdir -p $FINALDEST"
pushd $FINALDEST/
sg releng "mkdir -p Cloud-Images/i386/Images Cloud-Images/x86_64/Images Docker/x86_64"
popd


USER=$(whoami)
# stage images
sg releng "sudo /usr/bin/cp -l /mnt/fedora_koji/koji/scratch/$USER/task_*/Fedora-Cloud*$VERSION-$DATE\.i386.raw.xz $FINALDEST/Cloud-Images/i386/Images/"
sg releng "sudo /usr/bin/cp -l /mnt/fedora_koji/koji/scratch/$USER/task_*/Fedora-Cloud*$VERSION-$DATE\.i386.qcow2 $FINALDEST/Cloud-Images/i386/Images/"
sg releng "sudo /usr/bin/cp -l /mnt/fedora_koji/koji/scratch/$USER/task_*/Fedora-Cloud*$VERSION-$DATE\.x86_64.raw.xz $FINALDEST/Cloud-Images/x86_64/Images/"
sg releng "sudo /usr/bin/cp -l /mnt/fedora_koji/koji/scratch/$USER/task_*/Fedora-Cloud*$VERSION-$DATE\.x86_64.qcow2 $FINALDEST/Cloud-Images/x86_64/Images/"
sg releng "sudo /usr/bin/cp -l /mnt/fedora_koji/koji/scratch/$USER/task_*/Fedora-Cloud*$VERSION-$DATE\.x86_64.*.ova $FINALDEST/Cloud-Images/x86_64/Images/"
sg releng "sudo /usr/bin/cp -l /mnt/fedora_koji/koji/scratch/$USER/task_*/Fedora-Docker*-$VERSION-$DATE*tar.xz $FINALDEST//Docker/x86_64/"



pushd $FINALDEST/Cloud-Images
for arch in i386 x86_64; do pushd $arch/Images; sg releng "sha256sum --tag -b *qcow2 *raw.xz *ova>  Fedora-Cloud-Images-$arch-$VERSION-CHECKSUM"; popd; done
popd

pushd $FINALDEST/Docker/x86_64
sg releng "sha256sum --tag -b *tar.xz>  Fedora-Docker-x86_64-$VERSION-CHECKSUM"
popd


# stage the composed tree to final locateion
sg releng "mkdir /pub/alt/stage/$VERSION-$DATE/"
sg releng "chmod 700 /pub/alt/stage/$VERSION-$DATE/"
for type in Docker Cloud-Images; do sg releng "rsync -avhH $FINALDEST/$type/ /pub/alt/stage/$VERSION-$DATE/$type/"; done
sg releng "chmod 755 /pub/alt/stage/$VERSION-$DATE/"

