#!/usr/bin/python
#
# Copyright (C) 20111-2013 Red Hat Inc,
# SPDX-License-Identifier:    GPL-2.0+
#
# Authors: Bill Nottingham <notting@redhat.com>
#          Toshio Kuratomi <tkuratom@redhat.com>
from __future__ import print_function

import argparse
import sys

import pdc_client

def get_branches(pdc):
    for branch in pdc.get_paged(pdc['component-branches'], active=True):
        yield branch

def setup_args():
    usage = "\nget-critpath <branch>"
    parser = argparse.ArgumentParser(usage=usage)
    parser.add_argument('branch')
    return parser

def main():
    parser = setup_args()
    args = parser.parse_args()

    pdc = pdc_client.PDCClient('fedora')

    endpoint = pdc['component-branches']
    kwargs = dict(name=args.branch, active=True)
    existing = pdc.get_paged(endpoint, **kwargs)
    try:
        existing.next()
    except StopIteration:
        print("%s not a valid branch." % args.branch, file=sys.stderr)
        sys.exit(1)

    critpath_packages = pdc.get_paged(endpoint, critical_path=True, **kwargs)
    for package in critpath_packages:
        print(package['global_component'])

if __name__ == '__main__':
    main()
