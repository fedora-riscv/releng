#!/bin/bash


# Copyright (C) 2013-2014 Red Hat, Inc.
# SPDX-License-Identifier:      GPL-2.0+

VERSION=$1
COMPOSE=$2
DATE=$3
BRANCH=$(echo $VERSION|sed -e 's|_.*||g')
DESTDIR=/srv/pungi/$VERSION$COMPOSE/
FINALDEST=/mnt/fedora_koji/compose/$VERSION$COMPOSE/
KICKSTARTS=/srv/pungi/spin-kickstarts/
ATOMIC=/srv/pungi/fedora-atomic/
ATOMICDEST=/srv/pungi/atomic/

# SHORTCOMPOSE: a short reference to the compmose it is 1 for RC1 and TC1 for TC1
# BUILD: added for QA to refer to the compose by RC1 or TC1
# MILESTONE: is for QA refers to Alpha/Beta/Final
# SHORTVERSION: is a shortened version of the Version passed in drops off _TCX
# COMPOSE: is passed in for RC's only in the format of _RCX

SHORTCOMPOSE=$(echo $COMPOSE|sed -e 's|_RC||g')
BUILD=$(echo $COMPOSE|sed -e 's|_||g')
MILESTONE=$(echo $VERSION|sed -e 's|_T.*||' -e 's|.*_||')
SHORTVERSION=$VERSION
[ -z "$COMPOSE" ] && {
        SHORTVERSION=$(echo $VERSION|sed -e 's|_T.*||')
        SHORTCOMPOSE=$(echo $VERSION|sed -e 's|.*_||g')
        BUILD=$(echo $VERSION|sed -e 's|.*_||g')
}

[ -z "$MILESTONE" ] && {
       MILESTONE=Final
}

FULLPATH=$(pwd)
pushd $KICKSTARTS
git reset --hard
git checkout f$BRANCH
git pull --rebase
sed -i -e 's|repo --name=fedora .*$|repo --name=fedora --baseurl=http://kojipkgs.fedoraproject.org/mash/branched/$basearch/os/ \nrepo --name=bleed --baseurl=http://kojipkgs.fedoraproject.org/mash/bleed/$basearch|g' fedora-install-*.ks
sed -i -e 's|repo --name=fedora-source .*$|repo --name=fedora-source  --baseurl=http://kojipkgs.fedoraproject.org/mash/branched/source/SRPMS/\nrepo --name=bleed-source --baseurl=http://kojipkgs.fedoraproject.org/mash/bleed/SRPMS|g' fedora-install-*.ks
$FULLPATH/build-livecds "$SHORTVERSION" "$SHORTCOMPOSE" "$BRANCH"
$FULLPATH/build-arm-images "$SHORTVERSION" "$SHORTCOMPOSE" "$BRANCH"
pushd

pushd $ATOMIC
 git reset --hard
 git pull --rebase
 echo '[fedora-bleed]
name=fedora-bleed
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-22-$basearch
enabled=1
baseurl=http://kojipkgs.fedoraproject.org/mash/bleed/$basearch/' > fedora-bleed.repo
 sed -i -e 's|mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=fedora-22&arch=$basearch|baseurl=http://kojipkgs.fedoraproject.org/mash/branched/$basearch/os/|g' fedora*repo
 # make sure we add the bleed repo to the json file
 sed -i -e 's|\["fedora-22"\]|\["fedora-22", "fedora-bleed"\]|g' *json
 mock -r fedora-branched-compose-x86_64 --init || exit 1
 mock -r fedora-branched-compose-x86_64 --install rpm-ostree || exit 1
 mock -r fedora-branched-compose-x86_64  --shell "if [ ! -d $ATOMICDEST ]; then ostree init --repo=$ATOMICDEST --mode=archive-z2;fi"
 mock -r fedora-branched-compose-x86_64 --shell "rpm-ostree compose tree --repo=$ATOMICDEST $ATOMIC/fedora-atomic-docker-host.json" || exit 1
popd

for arch in armhfp i386 x86_64
do
 mock -r fedora-branched-compose-i386 --init || exit 1
 mock -r fedora-branched-compose-i386 --shell "pungi -c $KICKSTARTS/fedora-install-workstation.ks --destdir $DESTDIR --cachedir /srv/pungi/cache/ --arch=$arch -G -C --ver $VERSION --workdirbase=/tmp/work --family Fedora --variant Workstation --installpkgs fedora-productimg-workstation" || exit 1
 mock -r fedora-branched-compose-i386 --shell "pungi -c $KICKSTARTS/fedora-install-server.ks --destdir $DESTDIR --cachedir /srv/pungi/cache/ --arch=$arch -G -C --ver $VERSION --workdirbase=/tmp/work --family Fedora --variant Server --installpkgs fedora-productimg-server" || exit 1
 mock -r fedora-branched-compose-i386 --shell "pungi -c $KICKSTARTS/fedora-install-cloud.ks --destdir $DESTDIR --cachedir /srv/pungi/cache/ --arch=$arch -G -C --ver $VERSION --workdirbase=/tmp/work --family Fedora --variant Cloud --installpkgs fedora-productimg-cloud" || exit 1
 mock -r fedora-branched-compose-i386 --clean || exit 1
done

for arch in armhfp i386 x86_64
do
 if [[ $arch == armhfp ]]
  then HOST=arm01-releng00.arm.fedoraproject.org
  else HOST=compose-x86-01.phx2.fedoraproject.org
 fi

 if [[ $arch == i386 ]]
    then basearch=i686
    elif [[ $arch == armhfp ]]
    then basearch=armv7hl
    else basearch=$arch
 fi
  ssh $HOST /bin/bash -- << EOF
 set -x
 umask 002
 mock -r fedora-branched-compose-$arch --init || exit 1
 mock -r fedora-branched-compose-$arch --shell "XZ_DEFAULTS=--memlimit-compress=3700MiB pungi -c $KICKSTARTS/fedora-install-workstation.ks --destdir $DESTDIR --cachedir /srv/pungi/cache/ -B -I --no-dvd --ver $VERSION --workdirbase=/tmp/work --variant Workstation --family Fedora --installpkgs fedora-productimg-workstation"
 mock -r fedora-branched-compose-$arch --shell "XZ_DEFAULTS=--memlimit-compress=3700MiB pungi -c $KICKSTARTS/fedora-install-server.ks --destdir $DESTDIR --cachedir /srv/pungi/cache/  -B -I --ver $VERSION --workdirbase=/tmp/work --variant Server --family Fedora --installpkgs fedora-productimg-server"
 mock -r fedora-branched-compose-$arch --shell "XZ_DEFAULTS=--memlimit-compress=3700MiB pungi -c $KICKSTARTS/fedora-install-cloud.ks --destdir $DESTDIR --cachedir /srv/pungi/cache/ -B -I --no-dvd  --ver $VERSION --workdirbase=/tmp/work --variant Cloud --family Fedora --installpkgs fedora-productimg-cloud"
 mock -r fedora-branched-compose-$arch --clean || exit 1
 sg releng "repoclosure -a $basearch --repofrompath=$arch,$DESTDIR$VERSION/Workstation/$arch/os --repoid=$arch > $DESTDIR/logs/Workstation.$arch.repoclosure.log"
 sg releng "repoclosure -a $basearch --repofrompath=$arch,$DESTDIR$VERSION/Server/$arch/os --repoid=$arch > $DESTDIR/logs/Server.$arch.repoclosure.log"
 sg releng "repoclosure -a $basearch --repofrompath=$arch,$DESTDIR$VERSION/Cloud/$arch/os --repoid=$arch > $DESTDIR/logs/Cloud.$arch.repoclosure.log"
EOF

done

pushd $KICKSTARTS
$FULLPATH/build-cloud-images "$VERSION" "$DATE" "$BRANCH" "$COMPOSE"
popd

hardlink -vvc $FINALDEST/$VERSION/Workstation $FINALDEST/$VERSION/Server $FINALDEST/$VERSION/Cloud

sg releng "./build_composeinfo $FINALDEST/$VERSION/Workstation"
sg releng "./build_composeinfo $FINALDEST/$VERSION/Server"
sg releng "./build_composeinfo $FINALDEST/$VERSION/Cloud"


while true
do
  if [ $(koji list-tasks --mine|grep OPEN|grep -e image -e livecd -e appliance|wc -l) -ne 0 ]
  then
    echo "image, appliance or livecd tasks running, waiting 2 minutes"
    sleep 120
  else
    break
  fi
done


pushd $FINALDEST/$VERSION/
sg releng "mkdir -p Images/armhfp Cloud-Images/i386/Images Cloud-Images/x86_64/Images Spins/i386 Spins/x86_64 Live/i386 Server/armhfp/Images Live/x86_64 Docker/x86_64 Workstation/armhfp/Images Workstation/x86_64/iso Workstation/i386/iso"
popd


USER=$(whoami)
# stage images
sg releng "sudo /usr/bin/cp -l /mnt/fedora_koji/koji/scratch/$USER/task_*/Fedora*armhfp-$SHORTVERSION-$SHORTCOMPOSE-sda.raw.xz $FINALDEST/$VERSION/Images/armhfp/"
sg releng "sudo /usr/bin/cp -l /mnt/fedora_koji/koji/scratch/$USER/task_*/Fedora-Cloud*$VERSION-$DATE\.i386.raw.xz $FINALDEST/$VERSION/Cloud-Images/i386/Images/"
sg releng "sudo /usr/bin/cp -l /mnt/fedora_koji/koji/scratch/$USER/task_*/Fedora-Cloud*$VERSION-$DATE\.i386.qcow2 $FINALDEST/$VERSION/Cloud-Images/i386/Images/"
sg releng "sudo /usr/bin/cp -l /mnt/fedora_koji/koji/scratch/$USER/task_*/Fedora-Cloud*$VERSION-$DATE\.x86_64.raw.xz $FINALDEST/$VERSION/Cloud-Images/x86_64/Images/"
sg releng "sudo /usr/bin/cp -l /mnt/fedora_koji/koji/scratch/$USER/task_*/Fedora-Cloud*$VERSION-$DATE\.x86_64.qcow2 $FINALDEST/$VERSION/Cloud-Images/x86_64/Images/"
sg releng "sudo /usr/bin/cp -l /mnt/fedora_koji/koji/scratch/$USER/task_*/Fedora-Cloud*$VERSION-$DATE\.x86_64.*.ova $FINALDEST/$VERSION/Cloud-Images/x86_64/Images/"
sg releng "sudo /usr/bin/cp -l /mnt/fedora_koji/koji/scratch/$USER/task_*/Fedora-Docker*-$VERSION-$DATE*tar.xz $FINALDEST/$VERSION/Docker/x86_64/"

sg releng "sudo /usr/bin/cp -l /mnt/fedora_koji/koji/scratch/$USER/task*/*i686*$SHORTVERSION-$SHORTCOMPOSE.iso $FINALDEST/$VERSION/Spins/i386/"
sg releng "sudo /usr/bin/cp -l /mnt/fedora_koji/koji/scratch/$USER/task*/*x86_64*$SHORTVERSION-$SHORTCOMPOSE.iso $FINALDEST/$VERSION/Spins/x86_64/"

sg releng "mv $FINALDEST/$VERSION/Spins/i386/Fedora-Live-Workstation* $FINALDEST/$VERSION/Workstation/i386/iso/"
sg releng "mv $FINALDEST/$VERSION/Spins/i386/Fedora-Live-KDE* $FINALDEST/$VERSION/Live/i386/"
sg releng "mv $FINALDEST/$VERSION/Spins/i386/Fedora-Live-Xfce* $FINALDEST/$VERSION/Live/i386/"
sg releng "mv $FINALDEST/$VERSION/Spins/i386/Fedora-Live-SoaS* $FINALDEST/$VERSION/Live/i386/"
sg releng "mv $FINALDEST/$VERSION/Spins/i386/Fedora-Live-LXDE* $FINALDEST/$VERSION/Live/i386/"
sg releng "mv $FINALDEST/$VERSION/Spins/i386/Fedora-Live-MATE_Compiz* $FINALDEST/$VERSION/Live/i386/"
sg releng "mv $FINALDEST/$VERSION/Spins/x86_64/Fedora-Live-Workstation* $FINALDEST/$VERSION/Workstation/x86_64/iso/"
sg releng "mv $FINALDEST/$VERSION/Spins/x86_64/Fedora-Live-KDE* $FINALDEST/$VERSION/Live/x86_64/"
sg releng "mv $FINALDEST/$VERSION/Spins/x86_64/Fedora-Live-Xfce* $FINALDEST/$VERSION/Live/x86_64/"
sg releng "mv $FINALDEST/$VERSION/Spins/x86_64/Fedora-Live-SoaS* $FINALDEST/$VERSION/Live/x86_64/"
sg releng "mv $FINALDEST/$VERSION/Spins/x86_64/Fedora-Live-LXDE* $FINALDEST/$VERSION/Live/x86_64/"
sg releng "mv $FINALDEST/$VERSION/Spins/x86_64/Fedora-Live-MATE_Compiz* $FINALDEST/$VERSION/Live/x86_64/"

sg releng "mv $FINALDEST/$VERSION/Images/armhfp/Fedora-Workstation* $FINALDEST/$VERSION/Workstation/armhfp/Images/"
sg releng "mv $FINALDEST/$VERSION/Images/armhfp/Fedora-Server* $FINALDEST/$VERSION/Server/armhfp/Images/"

for type in Spins Live
do
pushd $FINALDEST/$VERSION/$type/
for arch in i386 x86_64; do pushd $arch; sg releng "sha256sum --tag -b *iso>  Fedora-$type-$arch-$VERSION-CHECKSUM"; popd; done
popd
done

pushd $FINALDEST/$VERSION/Cloud-Images
for arch in i386 x86_64; do pushd $arch/Images; sg releng "sha256sum --tag -b *qcow2 *raw.xz *ova>  Fedora-Cloud-Images-$arch-$VERSION-CHECKSUM"; popd; done
popd

pushd $FINALDEST/$VERSION/Workstation/armhfp/Images
sg releng "sha256sum --tag -b *raw.xz>  Fedora-Workstation-Images-armhfp-$VERSION-CHECKSUM"
popd

pushd $FINALDEST/$VERSION/Server/armhfp/Images
sg releng "sha256sum --tag -b *raw.xz>  Fedora-Server-Images-armhfp-$VERSION-CHECKSUM"
popd

pushd $FINALDEST/$VERSION/Docker/x86_64
sg releng "sha256sum --tag -b *tar.xz>  Fedora-Docker-x86_64-$VERSION-CHECKSUM"
popd

pushd $FINALDEST/$VERSION/Workstation/
for arch in i386 x86_64; do pushd $arch/iso/; sg releng "sha256sum --tag -b Fedora-Live-Workstation*iso>>  Fedora-Workstation-$VERSION-$arch-CHECKSUM"; popd; done
popd

pushd $FINALDEST/$VERSION/Images
for arch in armhfp; do pushd $arch; sg releng "sha256sum --tag -b *qcow2 *raw.xz>  Fedora-Images-$arch-$VERSION-CHECKSUM"; popd; done
popd

# stage the composed tree to final locateion
sg releng "mkdir /pub/alt/stage/$VERSION$COMPOSE/"
sg releng "chmod 700 /pub/alt/stage/$VERSION$COMPOSE/"
for type in Docker Workstation Server Cloud Cloud-Images Spins Live Images; do sg releng "rsync -avhH $FINALDEST/$VERSION/$type/ /pub/alt/stage/$VERSION$COMPOSE/$type/"; done
#sg releng "chmod 755 /pub/alt/stage/$VERSION$COMPOSE/"

echo "======= compose output for trac ======="
echo "http://dl.fedoraproject.org/pub/alt/stage/$VERSION$COMPOSE/"
echo ""
echo "armhfp Workstation repoclosure"
echo "{{{"
cat $FINALDEST/logs/Workstation.armhfp.repoclosure.log
echo "}}}"
echo "i386 Workstation repoclosure"
echo "{{{"
cat $FINALDEST/logs/Workstation.i386.repoclosure.log
echo "}}}"
echo "x86_64 Workstation repoclosure"
echo "{{{"
cat $FINALDEST/logs/Workstation.x86_64.repoclosure.log
echo "}}}"
echo ""
echo "armhfp Server repoclosure"
echo "{{{"
cat $FINALDEST/logs/Server.armhfp.repoclosure.log
echo "}}}"
echo "i386 Server repoclosure"
echo "{{{"
cat $FINALDEST/logs/Server.i386.repoclosure.log
echo "}}}"
echo "x86_64 Server repoclosure"
echo "{{{"
cat $FINALDEST/logs/Server.x86_64.repoclosure.log
echo "}}}"
echo ""
echo "armhfp Cloud repoclosure"
echo "{{{"
cat $FINALDEST/logs/Cloud.armhfp.repoclosure.log
echo "}}}"
echo "i386 Cloud repoclosure"
echo "{{{"
cat $FINALDEST/logs/Cloud.i386.repoclosure.log
echo "}}}"
echo "x86_64 Cloud repoclosure"
echo "{{{"
cat $FINALDEST/logs/Cloud.x86_64.repoclosure.log
echo "}}}"
