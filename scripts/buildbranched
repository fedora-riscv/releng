#!/bin/bash

# runs currently on releng03.phx2.fedoraproject.org

DATE=$1
ARCH=$2

BRANCHED="18"

TREEPREFIX="/pub/fedora/linux"
MASHDIR="/mnt/koji/mash/branched-$DATE"
EXPANDARCH=""
DEPOPTS="--treename F-$BRANCHED"
MASHOPTS=""
MOCKCONFIG=fedora-branched-compose-i386
MAIL="devel@lists.fedoraproject.org,test@lists.fedoraproject.org"
SUBJECT='F-'$BRANCHED' Branched report: '$DATE' changes'
FROM="Fedora Branched Report <rawhide@fedoraproject.org>"
RSYNCPREFIX="sudo -u ftpsync"
[ -n "$ARCH" ] && {
TREEPREFIX="/mnt/koji/tree"
EXPANDARCH="-$ARCH"
DEPOPTS="--treename F-$BRANCHED --nomail"
MASHOPTS="-c /etc/mash/mash.$ARCH.conf"
MAIL="secondary@lists.fedoraproject.org,$ARCH@lists.fedoraproject.org"
SUBJECT=$ARCH' F-'$BRANCHED' Branched report: '$DATE' changes'
FROM=$ARCH' Fedora Branched Report <rawhide@fedoraproject.org>'
RSYNCPREFIX=""
}

[ "$ARCH" == "ppc" ] && {
MOCKCONFIG=fedora-branched-compose-ppc64

}
 
RSYNC_OPTS="-rlptDHhv --delay-updates"
DESTPATH="$TREEPREFIX/development/$BRANCHED/"


[ -z "$DATE" ] && {
	echo "usage: buildbranched <date>"
	exit 1
}

TMPDIR=`mktemp -d /tmp/branched.$DATE.XXXX`
mkdir -p /mnt/koji/mash/branched-$DATE/logs
echo "Compose started at `date --utc`" > /mnt/koji/mash/branched-$DATE/logs/start
echo >> /mnt/koji/mash/branched-$DATE/logs/start

[ -z "$ARCH" ] && {
# Emit a message using bodhi's cert (since we should be running as "masher").
echo "start" | fedmsg-logger \
    --cert-prefix bodhi \
    --modname compose \
    --topic branched.start
}

pushd $TMPDIR
git clone git://git.fedorahosted.org/comps.git && {
	pushd comps
	make comps-f$BRANCHED.xml
	cp comps-f$BRANCHED.xml /mnt/koji/mash/branched-$DATE/logs/
	popd
}
popd

[ -f /mnt/koji/mash/branched-$DATE/logs/comps-f$BRANCHED.xml ] || exit 1

mock -r $MOCKCONFIG --uniqueext=$DATE --init
mock -r $MOCKCONFIG --uniqueext=$DATE --no-clean --install koji yum createrepo cvs make intltool findutils mash yum-utils rsync repoview hardlink
# until we move to bodhi lets not be strict about the gpg keys
mock -r $MOCKCONFIG --uniqueext=$DATE --chroot "sed -i -e 's|strict_keys = True|strict_keys = False|g' /etc/mash/branched.mash"
# secondary arches are a bit harder to make sure everything is signed lets not be too strict, but actual release compsoes need to be.
[ -n "$ARCH" ] && {
mock -r $MOCKCONFIG --uniqueext=$DATE --chroot "sed -i -e 's|strict_keys = True|strict_keys = False|g' /etc/mash/branched.$ARCH.mash"
}

# Copy in the hosts file so that we get the right address for koji
mock -r $MOCKCONFIG --uniqueext=$DATE --copyin /etc/hosts /etc/hosts >/dev/null 2>&1 # this reports to fail, but actually works

[ -z "$ARCH" ] && {
# Emit a message using bodhi's cert (since we should be running as "masher").
echo "start" | fedmsg-logger \
    --cert-prefix bodhi \
    --modname compose \
    --topic branched.mash.start
}

# Drop privs here so that we run as the masher UID
mock -r $MOCKCONFIG --uniqueext=$DATE --unpriv --chroot "mash $MASHOPTS -p $TREEPREFIX/development/$BRANCHED -o /mnt/koji/mash/branched-$DATE --compsfile /mnt/koji/mash/branched-$DATE/logs/comps-f$BRANCHED.xml $BRANCHED$EXPANDARCH > /mnt/koji/mash/branched-$DATE/logs/mash.log 2>&1" || exit 1

[ -z "$ARCH" ] && {
# Emit a message using bodhi's cert (since we should be running as "masher").
echo "done" | fedmsg-logger \
    --cert-prefix bodhi \
    --modname compose \
    --topic branched.mash.complete
}

# hardlink the noarch deltarpms between x86_64 and i386 
mock -r $MOCKCONFIG --uniqueext=$DATE --chroot "hardlink -v -c /mnt/koji/mash/branched-$DATE/$BRANCHED$EXPANDARCH"

mock -r $MOCKCONFIG --uniqueext=$DATE --chroot "rm -f /var/lib/rpm/__db*"
mock -r $MOCKCONFIG --uniqueext=$DATE --unpriv --chroot "/usr/bin/repodiff -q --new=file:///mnt/koji/mash/branched-$DATE/$BRANCHED$EXPANDARCH/source/SRPMS --old=file://$TREEPREFIX/development/$BRANCHED/source/SRPMS > /mnt/koji/mash/branched-$DATE/logs/repodiff"

mock -r $MOCKCONFIG --uniqueext=$DATE --unpriv --chroot "/usr/share/mash/spam-o-matic $DEPOPTS /mnt/koji/mash/branched-$DATE/$BRANCHED$EXPANDARCH >/mnt/koji/mash/branched-$DATE/logs/depcheck" &


[ -z "$ARCH" ] && {
# Emit a message using bodhi's cert (since we should be running as "masher").
echo "start" | fedmsg-logger \
    --cert-prefix bodhi \
    --modname compose \
    --topic branched.pungify.start
}

#only run critpath on primary arch
[ -z "$ARCH" ] && {
./scripts/critpath.py --url file:///mnt/koji/mash/branched-$DATE/ -o /mnt/koji/mash/branched-$DATE/logs/critpath.txt branched &> /mnt/koji/mash/branched-$DATE/logs/critpath.log

for basearch in i386 x86_64 ; do
    HOST=$(koji list-hosts --quiet --enabled --ready --arch=$basearch | sed 's|/| |g' | sort -g -k4 -k5r | awk -F '.' '{ print $1 ; exit }')
    ./scripts/pungify $DATE $BRANCHED $basearch $HOST > /mnt/koji/mash/branched-$DATE/logs/pungify-$basearch.log 2>&1 &
    done
}
wait

[ -z "$ARCH" ] && {
# Emit a message using bodhi's cert (since we should be running as "masher").
echo "done" | fedmsg-logger \
    --cert-prefix bodhi \
    --modname compose \
    --topic branched.pungify.complete
}

echo "Running build_composeinfo"
./scripts/build_composeinfo --name Fedora-${BRANCHED}-${DATE} /mnt/koji/mash/branched-$DATE/$BRANCHED/

mock -r $MOCKCONFIG --uniqueext=$DATE --clean

[ -n "$NOSYNC" ] && exit $rc

# Create a branched link in /mnt/koji/mash, deltas et al depend on this
rm /mnt/koji/mash/branched
ln -s /mnt/koji/mash/branched-$DATE/$BRANCHED$EXPANDARCH/ /mnt/koji/mash/branched

echo "Compose finished at `date --utc`" > /mnt/koji/mash/branched-$DATE/logs/finish
echo >> /mnt/koji/mash/branched-$DATE/logs/finish

[ -z "$ARCH" ] && {
# Emit a message using bodhi's cert (since we should be running as "masher").
echo "start" | fedmsg-logger \
    --cert-prefix bodhi \
    --modname compose \
    --topic branched.rsync.start
}

cd /tmp
# data
$RSYNCPREFIX /usr/bin/rsync $RSYNC_OPTS --link-dest=$TREEPREFIX/development/rawhide/ --exclude repodata/ /mnt/koji/mash/branched-$DATE/$BRANCHED$EXPANDARCH/ $DESTPATH
# repodata & cleanup
$RSYNCPREFIX /usr/bin/rsync $RSYNC_OPTS --link-dest=$TREEPREFIX/development/rawhide/ --delete --delete-after /mnt/koji/mash/branched-$DATE/$BRANCHED$EXPANDARCH/ $DESTPATH

[ -z "$ARCH" ] && {
# Emit a message using bodhi's cert (since we should be running as "masher").
echo "done" | fedmsg-logger \
    --cert-prefix bodhi \
    --modname compose \
    --topic branched.rsync.complete
}

if [ "$?" = "0" ]; then
    cat /mnt/koji/mash/branched-$DATE/logs/start /mnt/koji/mash/branched-$DATE/logs/depcheck /mnt/koji/mash/branched-$DATE/logs/repodiff /mnt/koji/mash/branched-$DATE/logs/finish |  mutt -e "set from=\"$FROM\"" -e 'set envelope_from=yes' -s "$SUBJECT" $MAIL
fi

[ -z "$ARCH" ] && {
# Emit a message using bodhi's cert (since we should be running as "masher").
echo "done" | fedmsg-logger \
    --cert-prefix bodhi \
    --modname compose \
    --topic branched.complete
}

exit 0
